name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow

      - name: Download latest yt-dlp.exe
        run: |
          $rel = Invoke-RestMethod -Uri 'https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest' -Headers @{Accept='application/vnd.github+json'}
          $asset = $rel.assets | Where-Object { $_.name -like '*yt-dlp.exe' } | Select-Object -First 1
          Invoke-WebRequest -Uri $asset.browser_download_url -OutFile 'yt-dlp.exe'

      - name: Download latest ffmpeg (BtbN builds)
        run: |
          $rel = Invoke-RestMethod -Uri 'https://api.github.com/repos/BtbN/FFmpeg-Builds/releases/latest' -Headers @{Accept='application/vnd.github+json'}
          $asset = $rel.assets | Where-Object { $_.name -match 'win64' -and $_.name -match '\.zip$' } | Select-Object -First 1
          Invoke-WebRequest -Uri $asset.browser_download_url -OutFile 'ffmpeg.zip'
          Expand-Archive -Path ffmpeg.zip -DestinationPath ffmpeg_tmp
          $ff = Get-ChildItem -Path ffmpeg_tmp -Filter ffmpeg.exe -Recurse | Select-Object -First 1
          New-Item -ItemType Directory -Force -Path .\ffmpeg | Out-Null
          Copy-Item $ff.FullName -Destination .\ffmpeg\ffmpeg.exe -Force

      - name: Build EXE with PyInstaller (embed resources/binaries)
        run: |
          pyinstaller -F KirstGrab.py --distpath dist --workpath build --noconfirm `
            --add-data 'images/background.png;images' `
            --add-data 'fonts/m6x11plus.ttf;fonts' `
            --add-data 'icon.ico;.' `
            --add-binary 'yt-dlp.exe;bin' `
            --add-binary 'ffmpeg\ffmpeg.exe;bin'

      - name: Prepare archive
        run: |
          $exe = Get-ChildItem -Path dist -Filter *.exe -Recurse | Select-Object -First 1
          if (-not $exe) { throw "Executable not found in dist/" }
          Compress-Archive -Path $exe.FullName -DestinationPath release-${{ github.event.inputs.version }}.zip -Force

      - name: Create Git tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          files: |
            release-${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
